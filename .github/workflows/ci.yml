name: pipeline_TDW-02

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  check-api-status:
    name: Check MHW API Status
    runs-on: ubuntu-latest
    steps:
      - name: Verify API Status
        run: |
          STATUS_CODE=$(curl -o /dev/null -s -w "%{http_code}" https://api.example.com/mhw)
          if [ "$STATUS_CODE" -ne 200 ]; then
            echo "MHW API is down. Status code: $STATUS_CODE"
            exit 1
          else
            echo "MHW API is up. Status code: $STATUS_CODE"
          fi

  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    needs: check-api-status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm install

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Run tests
        run: npm test

  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    needs: run-tests
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Build React project
        run: npm run build

  format-code:
    name: Format Code
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Prettier
        run: npm install prettier

      - name: Run Prettier
        run: npx prettier --write .

  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: format-code
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Deploy to Vercel
        run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --confirm --cwd .
