name: pipeline_TDW-02

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  check-mhw-api:
    name: Check MHW API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Check MHW API Status
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://mhw-db.com/armor)
          if [ "$response" -eq 200 ]; then
            echo "MHW API is reachable."
          else
            echo "Failed to reach MHW API. Status code: $response"
            exit 1
          fi

  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    needs: check-mhw-api
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Clear npm cache
        run: npm cache clean --force
      - name: Remove node_modules
        run: rm -rf node_modules
      - name: Install dependencies
        run: npm install

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Run tests
        run: npm test

  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Build React project
        run: npm run build

  format-code:
    name: Format Code
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install Prettier
        run: npm install prettier
      - name: Run Prettier
        run: npx prettier --write .

  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: format-code
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Deploy to Vercel
        run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --confirm --cwd
